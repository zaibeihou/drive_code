atomic64_inc_return() 函数的作用:


这是一个原子操作函数
它会将counter的值加1,并返回增加后的值
假设初始值是0,那么每次调用会返回1,2,3,4,5...


& 1 操作的作用:


将返回值与1进行按位与运算
1的二进制表示是: 0001
任何数与1进行按位与运算,实际上就是取其最低位


让我们看看具体过程:

第1次调用: 返回值1
1 & 1 = 1  (二进制: 0001 & 0001 = 0001)

第2次调用: 返回值2  
2 & 1 = 0  (二进制: 0010 & 0001 = 0000)

第3次调用: 返回值3
3 & 1 = 1  (二进制: 0011 & 0001 = 0001)

第4次调用: 返回值4
4 & 1 = 0  (二进制: 0100 & 0001 = 0000)
所以:

奇数 & 1 = 1
偶数 & 1 = 0

这样,随着counter不断递增,val的值就会在0和1之间交替变化。这是一个非常巧妙的位运算技巧。
用这种方式实现0/1切换的优点是:

代码简洁
执行效率高(位运算很快)
原子操作保证了在多线程环境下的正确性
